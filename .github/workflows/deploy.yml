# Nome do workflow que aparecerá na aba "Actions" do GitHub
name: Deploy Supabase Edge Function

on:
  # Gatilho 1: Rodar automaticamente ao fazer push na branch 'master'
  push:
    branches:
      - master  # <-- Confirmado que a branch é 'master'
    paths:
      - 'supabase/functions/**'
      - '.github/workflows/**' # <-- Roda se o próprio workflow for alterado

  # Gatilho 2: Rodar manualmente pela aba "Actions"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Clona o repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # Passo 2: Configura a CLI do Supabase
      - name: Set up Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      # Passo 3: Define os segredos no Supabase Vault
      - name: Set Supabase Secrets
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          supabase secrets set --project-ref ${{ secrets.SUPABASE_PROJECT_ID }} MERCADO_PAGO_ACCESS_TOKEN=${{ secrets.MERCADO_PAGO_ACCESS_TOKEN }}
          supabase secrets set --project-ref ${{ secrets.SUPABASE_PROJECT_ID }} MERCADO_PAGO_PLAN_ID=${{ secrets.MERCADO_PAGO_PLAN_ID }}

      # Passo 4: Faz o deploy das functions
      - name: Deploy Supabase Edge Functions
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          supabase functions deploy start-subscription --project-ref ${{ secrets.SUPABASE_PROJECT_ID }} --no-verify-jwt
          supabase functions deploy mercado-pago-webhook --project-ref ${{ secrets.SUPABASE_PROJECT_ID }} --no-verify-jwt