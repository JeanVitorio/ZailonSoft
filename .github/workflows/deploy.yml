# Nome do workflow que aparecerá na aba "Actions" do GitHub
name: Deploy Supabase Function

# Gatilho (trigger): Define quando o workflow deve rodar
on:
  push:
    branches:
      # Roda apenas para pushes feitos na branch 'master'
      - master
    paths:
      # Roda apenas se houver qualquer alteração dentro da pasta de functions
      - 'supabase/functions/**'
  # Permite que você rode este workflow manualmente pela aba "Actions" do GitHub
  workflow_dispatch:

# Tarefas (jobs) que serão executadas
jobs:
  deploy:
    # Define o tipo de máquina virtual que executará o job
    runs-on: ubuntu-latest

    # Passos (steps) a serem seguidos dentro do job
    steps:
      # Passo 1: Baixa (clona) o seu código do repositório para a máquina virtual
      - name: Checkout repository
        uses: actions/checkout@v3

      # Passo 2: Instala e configura a ferramenta de linha de comando (CLI) do Supabase
      - name: Set up Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      # Passo 3: Configura os segredos no Supabase Vault
      - name: Set Supabase Secrets
        run: |
          supabase secrets set --project-ref ${{ secrets.SUPABASE_PROJECT_ID }} MERCADO_PAGO_ACCESS_TOKEN=${{ secrets.MERCADO_PAGO_ACCESS_TOKEN }}
          supabase secrets set --project-ref ${{ secrets.SUPABASE_PROJECT_ID }} MERCADO_PAGO_PLAN_ID=${{ secrets.MERCADO_PAGO_PLAN_ID }}
          # Adicione aqui quaisquer outros segredos que suas funções precisem acessar
          # Exemplo:
          # supabase secrets set --project-ref ${{ secrets.SUPABASE_PROJECT_ID }} SUPABASE_URL=${{ secrets.SUPABASE_URL }}
          # supabase secrets set --project-ref ${{ secrets.SUPABASE_PROJECT_ID }} SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          # supabase secrets set --project-ref ${{ secrets.SUPABASE_PROJECT_ID }} SITE_URL=${{ secrets.SITE_URL }}
        env:
          # O token de acesso do Supabase é necessário para autenticar a CLI e permitir a alteração de segredos
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      # Passo 4: Executa o comando para fazer o deploy das suas functions para o Supabase
      - name: Deploy Supabase Edge Functions
        run: |
          supabase functions deploy start-subscription --project-ref ${{ secrets.SUPABASE_PROJECT_ID }} --no-verify-jwt
          supabase functions deploy mercado-pago-webhook --project-ref ${{ secrets.SUPABASE_PROJECT_ID }} --no-verify-jwt
        env:
          # O token de acesso do Supabase também é necessário aqui para autenticar o comando de deploy
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}